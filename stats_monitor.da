import sys
from random import randint
import time
import statistics
import psutil

class Stat(process):
    def setup(algo, nacceptors, nreplicas, nleaders, nclients, nops):
        self.q = []
        self.e_time=[]
        self.c_time=[]

    def algorun(module):
        acceptors = new(module.Acceptor, (), num= nacceptors)
        replicas = new(module.Replica, num= nreplicas)
        leaders = new(module.Leader, (acceptors, replicas), num= nleaders)
        initial_state = [];  setup(replicas, (leaders, initial_state))
        clients = new(module.Client, (replicas, nops), num= nclients)

        start(acceptors)
        start(replicas | leaders)
        start(clients)
        await(each(c in clients, has=received(('done',), from_=c)))
        output('All clients done.')

        send(('done',), to= (acceptors|replicas|leaders))
        send(('done',), to= parent())

    def run():
        output('-------------------',algo,' started---------------------')
        module = import_da(algo)
        algorun(module)

def main():
    nacceptors = int(sys.argv[1]) if len(sys.argv) > 1 else 5
    nreplicas = int(sys.argv[2]) if len(sys.argv) > 2 else 4
    nleaders = int(sys.argv[3]) if len(sys.argv) > 3 else 2
    nclients = int(sys.argv[4]) if len(sys.argv) > 4 else 3
    nops = int(sys.argv[5]) if len(sys.argv) > 5 else 3
    n = 1
    algos = ['orig']
    for algo in algos:
      while n>0:
        stat_proc = new(Stat, (algo, nacceptors, nreplicas, nleaders, nclients, nops), num= 1)
        start(stat_proc)
        await(each(p in stat_proc, has=received(('done',), from_=p)))
        n=n-1
        output('done')
